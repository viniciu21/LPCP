declaration:
# Liga a flag, declarações ocorrem
    multiplicacao_de_duas_matrizes : matrix, matrix -> int;
    soma_de_duas_matrizes : matrix, matrix -> int; 
    print_matriz : matrix -> void;
    resultado_soma : matrix;
    resultado_multiplicacao : matrix;
    i : int;
    j : int; 
    linhas_um : int; 
    colunas_um : int; 
    linhas_dois : int; 
    colunas_dois : int; 
    #pensar na matriz de float
end_declaration
# Desliga a flag

# Com a flag desligada, armazena a sintaxe das funções no memoryState
func multiplicacao_de_duas_matrizes(matriz_um[A][B], matriz_dois[C][D]):
    matrix resultado [B][D];

    for( i = 0; i < B; i = i + 1) : 
        for(j = 0; j < D; j = j + 1): 
            resultado[i][j] = matriz_um[i][j] * matriz_dois[j][i];
        end_for
    end_for

    return resultado; 
end_func

func soma_de_duas_matrizes (matriz_um[A][B], matriz_dois[C][D]):
    matrix resultado [A][B];

    for( i = 0; i < A; i = i + 1) : 
        for(j = 0; j < B; j = j + 1): 
            resultado_soma[i][j] = matriz_um[i][j] + matriz_dois[i][j];
        end_for
    end_for

    return resultado;
end_func

func print_matriz (matriz[N][M]):
    for(i = 0; i < N; i = i + 1):
        for(j = 0; j < M; j = j +1):
            print(matriz[i][j]);
            print(" ");
        end_for
        print("/n");
    end_for

end_func


main: 
# Liga a flag e processa o programa principal

    linhas_um = scan("qual o número de linhas da matriz um?");
    colunas_um = scan("qual o número de colunas da matriz um?"); 

    matriz_um[linhas_um][colunas_um] int : matrix;

    print("Digite aqui os valores da matriz um: ");

    # Desliga a flag, e armazena o bloco de iteração
    for(i = 0; i < linhas_um; i = i + 1 ) : 
        # Liga a flag para avaliação de expressão e stmts do bloco
        for(j = 0; j < colunas_um; j = j + 1):
            matriz_um[i][j] = scan(); 
        end_for
    end_for
# Mantêm a flag ligada para processamento do programa principal

    linhas_dois = scan("qual o número de linhas da matriz dois?");
    colunas_dois = scan("qual o número de colunas da matriz dois?"); 

    matriz_dois[linhas_dois][colunas_dois] int : matrix;

    print("Digite aqui os valores da matriz dois: ");

    # Desliga a flag, e armazena o bloco de iteração
    for(i = 0; i <linhas_dois; i = i + 1 ) : 
        # Liga a flag para avaliação de expressão e stmts do bloco
        for(j = 0; j < colunas_dois; j = j + 1):
            matriz_um[i][j] = scan(); 
        end_for
    end_for
# Mantêm a flag ligada para processamento do programa principal

    # Devido à implementação diferente do IF, não é necessário mexer com a flag
    if(linhas_um == linhas_dois &&  colunas_um == colunas_dois):
        resultado_soma[linhas_um][colunas_dois]; 
        resultado_soma = soma_de_duas_matrizes(matriz_um, matriz_dois);
        print_matriz(resultado_soma);
        else:
            print("Não é possivel somar essas matrizes \n");
        end_else
    end_if

    # Devido à implementação diferente do IF, não é necessário mexer com a flag
    if(colunas_um != linhas_dois):
        print("Não é possível multiplicar essas matrizes \n"); 
        else :
            resultado_multiplicacao = multiplicacao_de_duas_matrizes(matriz_um, matriz_dois);
            print_matriz(resultado_multiplicacao);
        end_else
    end_if
end_main
